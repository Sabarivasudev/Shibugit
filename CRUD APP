import { useState, useEffect } from "react";

function CrudApp() {
  const [items, setItems] = useState([]);
  const [form, setForm] = useState({ name: "", type: "", status: "Available" });
  const [editingIndex, setEditingIndex] = useState(null);

  useEffect(() => {
    const saved = localStorage.getItem("inventory");
    if (saved) setItems(JSON.parse(saved));
  }, []);

  useEffect(() => {
    localStorage.setItem("inventory", JSON.stringify(items));
  }, [items]);

  const handleChange = (e) => {
    setForm({ ...form, [e.target.name]: e.target.value });
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    if (editingIndex !== null) {
      const updated = [...items];
      updated[editingIndex] = form;
      setItems(updated);
      setEditingIndex(null);
    } else {
      setItems([...items, form]);
    }
    setForm({ name: "", type: "", status: "Available" });
  };

  const handleEdit = (index) => {
    setForm(items[index]);
    setEditingIndex(index);
  };

  const handleDelete = (index) => {
    if (window.confirm("Are you sure you want to delete this item?")) {
      const updated = items.filter((_, i) => i !== index);
      setItems(updated);
    }
  };

  return (
    <div className="container">
      <style>{`
        body {
          font-family: 'Segoe UI', sans-serif;
          background-color: #f9f9f9;
          margin: 0;
          padding: 0;
        }
        .container {
          max-width: 800px;
          margin: 40px auto;
          padding: 20px;
          background-color: #fff;
          border-radius: 12px;
          box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
          color: #222;
        }
        h1 {
          text-align: center;
          font-size: 2rem;
          margin-bottom: 30px;
        }
        .form {
          display: flex;
          flex-wrap: wrap;
          gap: 15px;
          margin-bottom: 30px;
        }
        .form input,
        .form select {
          flex: 1 1 200px;
          padding: 10px 12px;
          font-size: 1rem;
          border: 1px solid #ccc;
          border-radius: 8px;
          background-color: #fdfdfd;
        }
        .form button {
          padding: 10px 20px;
          font-size: 1rem;
          background-color: #0078d4;
          color: #fff;
          border: none;
          border-radius: 8px;
          cursor: pointer;
          transition: background-color 0.3s ease;
        }
        .form button:hover {
          background-color: #005fa3;
        }
        .table {
          width: 100%;
          border-collapse: collapse;
        }
        .table th,
        .table td {
          padding: 12px 16px;
          text-align: left;
          border-bottom: 1px solid #eee;
        }
        .table th {
          background-color: #f0f0f0;
          font-weight: 600;
        }
        .center {
          text-align: center;
          padding: 20px;
          color: #888;
        }
        .edit,
        .delete {
          padding: 6px 12px;
          margin-right: 8px;
          font-size: 0.9rem;
          border: none;
          border-radius: 6px;
          cursor: pointer;
        }
        .edit {
          background-color: #ffc107;
          color: #000;
        }
        .delete {
          background-color: #dc3545;
          color: #fff;
        }
        .edit:hover {
          background-color: #e0a800;
        }
        .delete:hover {
          background-color: #c82333;
        }
        @media (max-width: 600px) {
          .form {
            flex-direction: column;
          }
          .form input,
          .form select,
          .form button {
            width: 100%;
          }
          .table th,
          .table td {
            font-size: 0.9rem;
          }
        }
      `}</style>

      <h1>Inventory Management</h1>
      <form onSubmit={handleSubmit} className="form">
        <input
          type="text"
          name="name"
          placeholder="Item Name"
          value={form.name}
          onChange={handleChange}
          required
        />
        <input
          type="text"
          name="type"
          placeholder="Item Type"
          value={form.type}
          onChange={handleChange}
        />
        <select name="status" value={form.status} onChange={handleChange}>
          <option>Available</option>
          <option>Assigned</option>
          <option>In Repair</option>
          <option>Retired</option>
        </select>
        <button type="submit">{editingIndex !== null ? "Update" : "Add"}</button>
      </form>

      <table className="table">
        <thead>
          <tr>
            <th>Name</th>
            <th>Type</th>
            <th>Status</th>
            <th>Actions</th>
          </tr>
        </thead>
        <tbody>
          {items.length === 0 ? (
            <tr>
              <td colSpan="4" className="center">No Items</td>
            </tr>
          ) : (
            items.map((item, i) => (
              <tr key={i}>
                <td>{item.name}</td>
                <td>{item.type}</td>
                <td>{item.status}</td>
                <td>
                  <button className="edit" onClick={() => handleEdit(i)}>Edit</button>
                  <button className="delete" onClick={() => handleDelete(i)}>Delete</button>
                </td>
              </tr>
            ))
          )}
        </tbody>
      </table>
    </div>
  );
}

export default CrudApp;
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
import { useState } from 'react';
import reactLogo from './assets/react.svg';
import viteLogo from '/vite.svg';
import './App.css';
import Todo from './To-Do';
import CrudApp from './Crudapp';

function App() {
  return (
    <div className="App">
      <h1>My CRUD App</h1>
      <CrudApp />
    </div>
  );
}

export default App;
